---
- name: sssd-auth |  Load Secrets
  include_vars: "secrets.yml"

- name: sssd-auth | Load Vars
  include_vars: "main.yml"

- name: sssd-auth | Install SSSD Auth Required Packages
  apt:
    name: 
      - realmd
      - sssd 
      - sssd-tools
      - samba-common
      - krb5-user
      - packagekit
      - samba-common-bin
      - samba-libs
      - adcli
      - ntp
      - python-pip
      - python-pexpect
    state: latest
    update_cache: yes

- name: sssd-auth | Configure ntp.conf to point to DC
  template:
    backup: yes
    force: yes
    src: ./ntp.conf.j2
    dest: /etc/ntp.conf
    owner: root
    group: root
    mode: 0644

- name: sssd_auth | Restart the NTP service
  service:
    name: ntp
    state: restarted
    enabled: yes

- name: sssd-auth | Configure realmd.conf for domain
  template:
    backup: yes
    force: yes
    src: ./realmd.conf.j2
    dest: /etc/realmd.conf
    owner: root
    group: root
    mode: 0644

- name: sssd-auth | Configure krb5.conf for domain
  template:
    backup: yes
    force: yes
    src: ./krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: 0644

- name: sssd-auth | Create kerberos ticket
  expect:
    command: /bin/bash -c "/usr/bin/kinit -V {{ kerberos_user }}"
    responses:
      (?i)Password: "{{ kerberos_user_password }}"

# Check for existing AD
- name: sssd-auth | Checking to see if system is already joined to AD
  command: /bin/bash -c "/usr/sbin/realm list"
  register: realm_list_results

- name: sssd-auth | Debug realm_list_results
  debug:
    msg: "{{ realm_list_results.stdout }}"

- name: sssd-auth | Join system to AD
  expect:
    command: /bin/bash -c "/usr/sbin/realm join {{ realm_domain }} --computer-ou='{{ realm_ad_ou }}' --user={{ kerberos_user }}"
    responses:
      (?i)Password: "{{ kerberos_user_password }}"  
  ignore_errors: yes
  when: realm_list_results.stdout == ""
  become: true

- name: sssd-auth | Configure pam common-session to make home directories
  lineinfile:
    path: /etc/pam.d/common-session
    state: present
    backup: yes
    line: 'session optional        pam_mkhomedir.so skel=/etc/skel/ umask=0077'

- name: sssd-auth | Configure sssd.conf for domain
  template:
    backup: yes
    force: yes
    src: ./sssd.conf.j2
    dest: /etc/sssd/sssd.conf
    owner: root
    group: root
    mode: 0600
  notify: restart sssd

- name: sssd-auth | Configure nsswitch.conf to not error on sudo
  template:
    backup: yes
    force: yes
    src: ./nsswitch.conf.j2
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: 0644

- name: sssd-auth | Configure sudoers to allow sysadminsadmingroup to sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    backup: yes
    line: '%{{ sudo_group }} ALL=(ALL:ALL) ALL'
